{{- if .Values.externalSecrets.enabled }}
{{- $dbSecretName := required "values.secrets.db.name is required (AWS)"           .Values.secrets.db.name }}
{{- $dbKey       := required "values.externalSecrets.dbKey is required (AWS)"     .Values.externalSecrets.dbKey }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-credentials-sync
  namespace: default
spec:
  refreshInterval: 1h
  secretStoreRef: { name: aws-sm, kind: SecretStore }
  target:
    name: {{ $dbSecretName }}
    creationPolicy: Owner
  data:
    - secretKey: username      # -> K8s
      remoteRef: { key: {{ $dbKey | quote }}, property: "username" }
    - secretKey: root-password
      remoteRef: { key: {{ $dbKey | quote }}, property: "root-password" }
    - secretKey: database
      remoteRef: { key: {{ $dbKey | quote }}, property: "database" }
    - secretKey: wp-password
      remoteRef: { key: {{ $dbKey | quote }}, property: "wp-password" }
{{- end }}
