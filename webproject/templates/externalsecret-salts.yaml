{{- if .Values.externalSecrets.enabled }}
{{- $saltName := required "values.secrets.salts.name is required (AWS)"          .Values.secrets.salts.name }}
{{- $saltsKey := required "values.externalSecrets.saltsKey is required (AWS)"    .Values.externalSecrets.saltsKey }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: wordpress-salts-sync
  namespace: default
spec:
  refreshInterval: 24h
  secretStoreRef: { name: aws-sm, kind: SecretStore }
  target:
    name: {{ $saltName }}
    creationPolicy: Owner
  data:
    - secretKey: AUTH_KEY         ; remoteRef: { key: {{ $saltsKey | quote }}, property: "AUTH_KEY" }
    - secretKey: SECURE_AUTH_KEY  ; remoteRef: { key: {{ $saltsKey | quote }}, property: "SECURE_AUTH_KEY" }
    - secretKey: LOGGED_IN_KEY    ; remoteRef: { key: {{ $saltsKey | quote }}, property: "LOGGED_IN_KEY" }
    - secretKey: NONCE_KEY        ; remoteRef: { key: {{ $saltsKey | quote }}, property: "NONCE_KEY" }
    - secretKey: AUTH_SALT        ; remoteRef: { key: {{ $saltsKey | quote }}, property: "AUTH_SALT" }
    - secretKey: SECURE_AUTH_SALT ; remoteRef: { key: {{ $saltsKey | quote }}, property: "SECURE_AUTH_SALT" }
    - secretKey: LOGGED_IN_SALT   ; remoteRef: { key: {{ $saltsKey | quote }}, property: "LOGGED_IN_SALT" }
    - secretKey: NONCE_SALT       ; remoteRef: { key: {{ $saltsKey | quote }}, property: "NONCE_SALT" }
{{- end }}
