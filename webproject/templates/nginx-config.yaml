apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;

    events { worker_connections 1024; }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      access_log /var/log/nginx/access.log;

      # --- HTTP: /healthz => 200 ; le reste redirige vers HTTPS
      server {
        listen 80;
        server_name {{ .Values.domain }} _;

        location = /healthz {
          return 200 'ok';
          add_header Content-Type text/plain;
        }

        location / {
          return 301 https://$host$request_uri;
        }
      }

      # --- HTTPS: /healthz => 200 (si la probe suit une 301)
      server {
        listen 443 ssl default_server;
        server_name {{ .Values.domain }} _;

        ssl_certificate      /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key  /etc/nginx/ssl/privkey.pem;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  10m;

        # Headers de sécurité
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # HSTS: en local, tu peux commenter si certif auto-signé
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location = /healthz {
          return 200 'ok';
          add_header Content-Type text/plain;
        }

        location / {
          proxy_pass              http://wordpress-service:80;
          proxy_set_header        Host              $host;
          proxy_set_header        X-Real-IP         $remote_addr;
          proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header        X-Forwarded-Proto $scheme;
          proxy_hide_header       X-Powered-By;
        }
      }
    }
