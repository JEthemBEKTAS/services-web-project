apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-deployment
  labels: { app: mariadb }
spec:
  replicas: {{ .Values.replicaCount.mariadb }}
  selector: { matchLabels: { app: mariadb } }
  template:
    metadata: { labels: { app: mariadb } }
    spec:
      serviceAccountName: {{ include "webproject.serviceAccountName" . }}
      containers:
      - name: mariadb
        image: {{ printf "%s/%s" .Values.image.registry .Values.image.mariadb }}
        imagePullPolicy: IfNotPresent
        ports: [ { containerPort: 3306, name: mysql } ]
        env:
          - name: MARIADB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "webproject.dbSecretName" . }}
                key: DB_ROOT_PASSWORD
        volumeMounts:
          - name: mariadb-data
            mountPath: /var/lib/mysql
        startupProbe:
          exec: { command: [ "sh", "-lc", "mysqladmin ping -h 127.0.0.1 -p\"${MARIADB_ROOT_PASSWORD}\"" ] }
          initialDelaySeconds: 20
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec: { command: [ "sh", "-lc", "mysql -h 127.0.0.1 -uroot -p\"${MARIADB_ROOT_PASSWORD}\" -e 'SELECT 1'" ] }
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 6
        livenessProbe:
          exec: { command: [ "sh", "-lc", "mysqladmin ping -h 127.0.0.1 -p\"${MARIADB_ROOT_PASSWORD}\"" ] }
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 3
          failureThreshold: 5
      volumes:
        - name: mariadb-data
          persistentVolumeClaim: { claimName: mariadb-pvc }
