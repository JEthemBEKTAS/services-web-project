{{- $name := include "webproject.wpBSalts.name" . -}}
{{- $ns := .Release.Namespace -}}
{{- $existing := (lookup "v1" "Secret" $ns $name) -}}
{{- $fromExisting := dict -}}
{{- if $existing -}}
  {{- range $k,$v := $existing.data }}
    {{- $_ := set $fromExisting $k (b64dec $v) -}}
  {{- end -}}
{{- end -}}

{{- if and .Values.secrets.create (not .Values.secrets.wpBSalts.existingSecretName) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels: {{- include "webproject.labels" . | nindent 4 }}
  # annotations:
  #   "helm.sh/resource-policy": keep
type: Opaque
stringData:
  AUTH_KEY:         {{ default (get $fromExisting "AUTH_KEY")         (default (randAlphaNum 64) .Values.secrets.wpBSalts.AUTH_KEY)         | quote }}
  SECURE_AUTH_KEY:  {{ default (get $fromExisting "SECURE_AUTH_KEY")  (default (randAlphaNum 64) .Values.secrets.wpBSalts.SECURE_AUTH_KEY)  | quote }}
  LOGGED_IN_KEY:    {{ default (get $fromExisting "LOGGED_IN_KEY")    (default (randAlphaNum 64) .Values.secrets.wpBSalts.LOGGED_IN_KEY)    | quote }}
  NONCE_KEY:        {{ default (get $fromExisting "NONCE_KEY")        (default (randAlphaNum 64) .Values.secrets.wpBSalts.NONCE_KEY)        | quote }}
  AUTH_SALT:        {{ default (get $fromExisting "AUTH_SALT")        (default (randAlphaNum 64) .Values.secrets.wpBSalts.AUTH_SALT)        | quote }}
  SECURE_AUTH_SALT: {{ default (get $fromExisting "SECURE_AUTH_SALT") (default (randAlphaNum 64) .Values.secrets.wpBSalts.SECURE_AUTH_SALT) | quote }}
  LOGGED_IN_SALT:   {{ default (get $fromExisting "LOGGED_IN_SALT")   (default (randAlphaNum 64) .Values.secrets.wpBSalts.LOGGED_IN_SALT)   | quote }}
  NONCE_SALT:       {{ default (get $fromExisting "NONCE_SALT")       (default (randAlphaNum 64) .Values.secrets.wpBSalts.NONCE_SALT)       | quote }}
{{- end }}
