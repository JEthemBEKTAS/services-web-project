{{- if .Values.backup.enabled }}

{{- if eq .Values.backup.mode "pvc" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "webproject.fullname" . }}-backup-pvc
spec:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: {{ .Values.backup.pvc.storageClass | default "local-path" }}
  resources:
    requests:
      storage: {{ .Values.backup.pvc.size | default "2Gi" }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "webproject.fullname" . }}-backup
spec:
  schedule: "{{ .Values.backup.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: dump
            image: {{ .Values.tooling.mariadbCliImage }}
            env:
              - name: ROOT_PWD
                valueFrom: { secretKeyRef: { name: {{ include "webproject.fullname" . }}-db-root, key: root-password } }
              - name: DB_A
                valueFrom: { secretKeyRef: { name: {{ include "webproject.fullname" . }}-db-a-credentials, key: database } }
              - name: DB_B
                valueFrom: { secretKeyRef: { name: {{ include "webproject.fullname" . }}-db-b-credentials, key: database } }
            command: ["/bin/sh","-lc"]
            args:
              - >
                set -e; TS=$(date +%Y%m%d-%H%M%S);
                mkdir -p /backup && cd /backup;
                mysqldump -h mariadb-service -uroot -p"${ROOT_PWD}" --databases "${DB_A}" "${DB_B}" > dump-${TS}.sql;
                ls -1t dump-*.sql | sed -n '1,{{ .Values.backup.retentionDays }}p' > /tmp/keep.list;
                ls -1 dump-*.sql | grep -v -f /tmp/keep.list | xargs -r rm -f;
            volumeMounts: [ { name: backup, mountPath: /backup } ]
          volumes:
          - name: backup
            persistentVolumeClaim: { claimName: {{ include "webproject.fullname" . }}-backup-pvc }
{{- end }}

{{- if eq .Values.backup.mode "s3" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "webproject.fullname" . }}-backup
spec:
  schedule: "{{ .Values.backup.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: dump
            image: {{ .Values.tooling.mariadbCliImage }}
            command: ["/bin/sh","-lc"]
            args:
              - >
                set -e; TS=$(date +%Y%m%d-%H%M%S);
                mysqldump -h mariadb-service -uroot -p"${ROOT_PWD}" --databases "${DB_A}" "${DB_B}" \
                | aws s3 cp - "s3://{{ .Values.backup.s3.bucket }}/{{ .Values.backup.s3.prefix }}/dump-${TS}.sql";
{{- end }}

{{- end }}
